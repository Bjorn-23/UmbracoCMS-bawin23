@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var spacingTopClass = (Model?.Content.Value<bool>("addSpaceToTop") == true) ? "spacing-top" : "";
    var spacingBottomClass = (Model?.Content.Value<bool>("addSpaceToBottom") == true) ? "spacing-bottom" : "";
    var negativeSpacingBottom = (Model?.Content.Value<bool>("addNegativeSpacingBottom") == true) ? "background-absolute-negative-spacing-bottom" : "";
    var centerContentClass = (Model?.Content.Value<bool>("centerContentOnPage") == true) ? "center" : "";
    var alignText = (Model?.Content.Value<bool>("alignAllTextCenter") == true ) ? "text-align-center" : "";

    var sectionBackgroundColorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionBackGroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none") ? $"bg-{sectionBackgroundColorLabel}" : "";

    var sectionBackgroundImage = Model?.Content?.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? "";
    var isBackgroundImageAbsolute = (!string.IsNullOrEmpty(sectionBackgroundImage)) ? "background-image-absolute" : "background-image";
    var backGroundHeight = Model?.Content?.Value<int>("sectionBackgroundHeight") ?? 0;
    var sectionMinimumHeight = backGroundHeight.ToString() + "px";
}

@if (Model?.Content.Value<bool>("SetBackgroundColorAbsolute") == true)
{
   <section id="@sectionId" class="@spacingTopClass @spacingBottomClass @alignText" style="min-height: @sectionMinimumHeight" >

        @if (!string.IsNullOrEmpty(backgroundColorClass))
        {
            <div class="background @backgroundColorClass @negativeSpacingBottom"></div>
        }

        @if (!string.IsNullOrEmpty(sectionBackgroundImage))
        {
            <img class="@isBackgroundImageAbsolute" src="@sectionBackgroundImage" alt="@sectionTitle background image" />
        }

        <div class="container @centerContentClass">
            @await Html.GetBlockGridItemAreasHtmlAsync(Model)
        </div>
    </section> 
}

else
{
    <section id="@sectionId" class="@spacingTopClass @spacingBottomClass @alignText @backgroundColorClass" style="min-height: @sectionMinimumHeight" >

        @if (!string.IsNullOrEmpty(sectionBackgroundImage))
        {
            <img class="@isBackgroundImageAbsolute" src="@sectionBackgroundImage" alt="@sectionTitle background image" />
        }
        <div class="container @centerContentClass">
            @await Html.GetBlockGridItemAreasHtmlAsync(Model)
        </div>
    </section>
}